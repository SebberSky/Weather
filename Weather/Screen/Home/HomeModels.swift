//
//  HomeModels.swift
//  Weather
//
//  Created by chawapon.kiatpravee on 1/8/2566 BE.
//  Copyright (c) 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Foundation

struct Home {
    // MARK: Use cases
    
    struct RequestCity {
        struct Request {
            let searchText: String
        }
        struct Response {
            let cities: [City]
        }
        struct ViewModel {
            let cities: [City.CityDisplay]
        }
    }
    
    struct RequestWeather {
        struct Request {
            let cityId: Int
        }
        struct Response {
            let weatherSummary: Weather.WeatherSummary?
            let main: Weather.WeatherMain?
            let visibility: Int?
            let wind: Weather.WeatherWind?
        }
        struct ViewModel {
            let weatherMain: String
            let description: String
            let icon: String
            let temp: String
            let feelLike: String
            let minTemp: String
            let maxTemp: String
            let pressure: String
            let humidity: String
            let visibility: String
            let speed: String
            let deg: String
        }
    }
    
    struct RequestWeatherIcon {
        struct Request {
            let iconCode: String
        }
        struct Response {
            let imageData: Data?
        }
        struct ViewModel {
            let weatherIcon: UIImage?
        }
    }
    
    struct RequestConvertTemp {
        struct Request {
            let maxTemp: String?
            let minTemp: String?
            let temp: String?
            let feelLike: String?
            let tempUnit: TemperatureUnit
        }
        struct Response {
            let maxTemp: Float?
            let minTemp: Float?
            let temp: Float?
            let feelLike: Float?
        }
        struct ViewModel {
            let maxTemp: String
            let minTemp: String
            let temp: String
            let feelLike: String
        }
    }
    
    struct Error {
        struct Response {
            let message: String
        }
        struct ViewModel {
            let message: String
        }
    }
}

/// Model for City response
struct City: Codable {
    let id: Int?
    let name: String?
    let state: String?
    let country: String?
    
    enum CodingKeys: String, CodingKey {
        case id, name, state, country
    }
    
    struct CityDisplay {
        let id: Int
        let displayName: String
    }
}

/// Model for Weather response
struct Weather: Codable {
    let weather: [WeatherSummary]?
    let main: WeatherMain?
    let visibility: Int?
    let wind: WeatherWind?
    
    struct WeatherSummary: Codable {
        let main: String?
        let description: String?
        let icon: String?
    }

    struct WeatherMain: Codable {
        let temp: Float?
        let feelLike: Float?
        let tempMin: Float?
        let tempMax: Float?
        let pressure: Int?
        let humidity: Int?
        
        enum CodingKeys: String, CodingKey {
            case temp, pressure, humidity
            case feelLike = "feels_like"
            case tempMin = "temp_min"
            case tempMax = "temp_max"
        }
    }
    
    struct WeatherWind: Codable {
        let speed: Float?
        let deg: Int?
    }
}

/// Directions for wind
enum Directions: Int {
    case North = 1
    case NorthEast = 2
    case East = 3
    case SouthEast = 4
    case South = 5
    case SouthWest = 6
    case West = 7
    case NorthWest = 8
}
